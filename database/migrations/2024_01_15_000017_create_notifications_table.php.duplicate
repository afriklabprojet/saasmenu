<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('notifications', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('restaurant_id')->nullable();
            $table->string('title');
            $table->text('message');
            $table->string('type')->default('general'); // order, promotion, system, general
            $table->enum('target_type', ['all', 'user', 'restaurant', 'role'])->default('all');
            $table->string('target_id')->nullable();
            $table->enum('status', ['draft', 'scheduled', 'pending', 'sent', 'failed'])->default('draft');
            $table->json('data')->nullable();
            $table->string('icon')->nullable();
            $table->string('image_url')->nullable();
            $table->string('click_action')->nullable();
            $table->boolean('is_recurring')->default(false);
            $table->string('recurrence_type')->nullable(); // daily, weekly, monthly
            $table->timestamp('scheduled_at')->nullable();
            $table->timestamp('sent_at')->nullable();
            $table->timestamp('next_send_at')->nullable();
            $table->integer('sent_count')->default(0);
            $table->integer('failed_count')->default(0);
            $table->text('error_message')->nullable();
            $table->timestamps();

            $table->foreign('restaurant_id')->references('id')->on('restaurants')->onDelete('cascade');

            $table->index(['restaurant_id', 'status']);
            $table->index(['target_type', 'target_id']);
            $table->index(['type', 'status']);
            $table->index('scheduled_at');
            $table->index('next_send_at');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('notifications');
    }
};
